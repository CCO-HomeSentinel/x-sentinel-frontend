name: Deploy Angular to EC2

on:
  push:
    branches:
      - main 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build the Angular application
        run: npm run build

      - name: Build Docker image
        run: |
          docker build -t xsentinel .

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker tag xsentinel ${{ secrets.DOCKER_USERNAME }}/xsentinel:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/xsentinel:latest

      - name: SSH to EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_XSENTINEL_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_XSENTINEL_PRIVATE_KEY }}
          script: |
            # Puxa a imagem mais recente do Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/xsentinel:latest

            # Para o contêiner em execução, se existir
            docker stop $(docker ps -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/xsentinel:latest) || true
            
            # Remove o contêiner (opcional)
            docker rm $(docker ps -aq --filter ancestor=${{ secrets.DOCKER_USERNAME }}/xsentinel:latest) || true
            
            # Rodar a nova imagem
            docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/xsentinel:latest